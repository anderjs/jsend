import { UserSystem } from "@nectiasw/typings";
import { ContextProps } from "@nectiasw/context";

/**
 * @description
 * Enum of permissions that can be used in the application.
 */
export enum IN_Permission {
  CAN_VIEW_CARD = "CAN_VIEW_CARD",

  SEE_RENDITION = "SEE_RENDITION",

  DIGIT_RENDITION = "DIGIT_RENDITION",

  CAN_VIEW_MANTAINER = "CAN_VIEW_MANTAINER",

  CAN_EDIT_MANTAINER = "CAN_EDIT_MANTAINER",

  CAN_VIEW_MANAGEMENT = "CAN_VIEW_MANAGEMENT",

  VISUALIZE_RENDITION = "VISUALIZE_RENDITION",

  CAN_VIEW_ATTENDANCE = "CAN_VIEW_ATTENDANCE",

  CAN_ADVANCE_PAYMENT = "CAN_ADVANCE_PAYMENT",

  CAN_ASSIGN_RESPONSIBLE = "CAN_ASSIGN_RESPONSIBLE",

  CAN_CREATE_INSCRIPTION = "CAN_CREATE_INSCRIPTION",

  CAN_VIEW_COURSE_CONTENT = "CAN_VIEW_COURSE_CONTENT",

  CAN_EDIT_COURSE_CONTENT = "CAN_EDIT_COURSE_CONTENT",

  CAN_REGISTER_ATTENDANCE = "CAN_REGISTER_ATTENDANCE",

  CAN_GENERATE_LIQUIDATIONS = "CAN_GENERATE_LIQUIDATIONS",

  CAN_GENERATE_PURCHASE_ORDER = "CAN_GENERATE_PURCHASE_ORDER",

  CAN_DOWNLOAD_PURCHASE_ORDER = "CAN_DOWNLOAD_PURCHASE_ORDER",

  CAN_VIEW_FILTER_RESPONSIBLE = "CAN_VIEW_FILTER_RESPONSIBLE",

  CAN_VIEW_MOVILIZATION_TRAVEL = "CAN_VIEW_MOVILIZATION_TRAVEL",

  CAN_RECTIFY_COURSE_FRANCHISE = "CAN_RECTIFY_COURSE_FRANCHISE",

  CAN_RECTIFY_FINANCING_ACCOUNT = "CAN_RECTIFY_FINANCING_ACCOUNT",

  CAN_GENERATE_SENCE_LIQUIDATION = "CAN_GENERATE_SENCE_LIQUIDATION",

  CAN_REPORT_MOVILIZATION_TRAVEL = "CAN_REPORT_MOVILIZATION_TRAVEL",

  CAN_RECTIFY_COURSE_NO_FRANCHISE = "CAN_RECTIFY_COURSE_NO_FRANCHISE",

  CAN_GENERATE_SENCE_COMMUNICATION = "CAN_GENERATE_SENCE_COMMUNICATION",

  CAN_UPDATE_REQUIREMENTS_MANUALLY = "CAN_UPDATE_REQUIREMENTS_MANUALLY",
}

export enum SP_Permission {
  CAN_VIEW_MENU = "MOSTRAR_MENU_LATERAL",

  CAN_CREATE_SYSTEMS = "CREAR_SISTEMAS",

  CAN_UPDATE_SYSTEMS = "EDITAR_SISTEMAS",

  CAN_CREATE_PROFILES = "CREAR_PERFILES",

  CAN_UPDATE_PROFILES = "EDITAR_PERFILES",

  CAN_CREATE_FUNCTIONS = "CREAR_FUNCIONES",

  CAN_DELETE_SYSTEMS = "ELIMINAR_SISTEMAS",

  CAN_VIEW_USERS_LIST = "LISTADO_USUARIOS",

  CAN_TOGGLE_SYSTEMS = "HABILITAR_SISTEMAS",

  CAN_DELETE_PROFILES = "ELIMINAR_PERFILES",

  CAN_DELETE_FUNCTIONS = "ELIMINAR_FUNCIONES",

  CAN_VIEW_SYSTEMS_LIST = "LISTADO_DE_SISTEMAS",

  CAN_VIEW_PROFILES_LIST = "LISTADO_DE_PERFILES",

  CAN_UPDATE_USER_INFO = "EDITAR_INFORMACION_USUARIO",

  CAN_ASSIGN_TEMPORARY_PERMISSION = "ASIGNAR_PERMISOS_TEMPORALES",

  CAN_DELETE_TEMPORARY_PERMISSION = "ELIMINAR_PERMISOS_TEMPORALES",
}

export type PermissionsProps = {
  allow?: IN_Permission[] | SP_Permission [];
  system?: string;
  systems?: string[];
  passport?: boolean;
  children?: React.ReactNode;
  inject?: ContextProps["user"];
};

export type AuthorizationFilterArgs = {
  allow: IN_Permission [] | SP_Permission [];
  user: UserSystem;
  system?: string;
};

export type AuthorizationSystemFlag = {
  user: UserSystem;
  systems: string[];
  passport: boolean;
};

export type AuthorizationProps = (args: AuthorizationFilterArgs) => boolean;
